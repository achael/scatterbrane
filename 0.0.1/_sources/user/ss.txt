.. module:: simscat

.. _ss:

SimScat Module 
==============

Important Notes
---------------

This section highlights some important aspects of the module.

The first thing to do is load the :class:`SimScat` class and logging module

.. code-block:: python

    from simscat import SimScat
    import logging
    logging.basicConfig(level=logging.INFO) # for example

The :class:`SimScat` object holds the parameters for the scattering screen and functions 
for generating images.  To initialize a simulation you contruct an instance of the screen
and set parameters

.. code-block:: python

    import numpy as np
    s = SimScat(np.zeros((64,64)),1,nphi=4096,screen_res=5,wavelength=3e-6,r_inner=100)

In this example I have set the source to be empty
with a pixel size of 1 :math:'\muas'.  Upon initialization, :class:`SimScat` creates a version of the 
source image whose pixel size is chosen to match the screen.  


.. warning::

    The resolution of the scattered (`iss`) and source images (`isrc`) may not match the original
    resolution element you provided SimScat.  You should access the property through `dx`.

Construction of a :class:`SimScat` instance will check some properties:

- Screen covers the source image.
- Source image is square.
- Inner turbulence scale is larger than the phase coherence length.
- Resolution element of the screen is larger than the inner turbulence scale.
- (warning) Is the image resolution approaching the refractive scale.

We can now proceed to generate the phase screen and scatter the source image:

.. code-block:: python
   
    s.generateScreen()
    s.scatter()

Go over rotation.

Look at initialization.

Class Methods
-------------

.. autoclass:: simscat.SimScat
    :members:

Utilities
=================
.. automodule:: simscat.utilities
    :members:
